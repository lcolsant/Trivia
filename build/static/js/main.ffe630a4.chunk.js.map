{"version":3,"sources":["App.js","TriviaRound.js","Sports.js","Entertainment.js","Science.js","serviceWorker.js","index.js"],"names":["timer","question","TriviaRound","_this","this","react_default","a","createElement","className","onClick","props","answer","value","Component","sportsQs","description","answers","isCorrect","entertainmentQs","scienceQs","i","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","start_time","Date","getTime","elapsed","penalty","score","submitted","correct","hint","testLength","iscatagory","catagory","initialState","setState","console","log","concat","priorState","clearInterval","Math","max","_this2","length","setInterval","end_time","elapsed_time","floor","button_group","_this3","clearTimer","calcScore","playAgain","nextQuestion","src_TriviaRound_0","updateScore","Fragment","selectCatagory","id","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffe630a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TriviaRound from './TriviaRound';\r\nimport sportsQs from './Sports';\r\nimport entertainmentQs from './Entertainment';\r\nimport scienceQs from './Science';\r\n\r\n\r\nlet i=0;\r\nlet timer;\r\nlet question;\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      start_time: new Date().getTime(),\r\n      elapsed: 0,\r\n      penalty: false,\r\n      question: null,\r\n      answers: '',\r\n      score: 0,\r\n      submitted: false,\r\n      correct: false,\r\n      hint: false,\r\n      testLength: null,\r\n      iscatagory: false,\r\n      catagory: null\r\n      \r\n    }\r\n\r\n    this.initialState = this.state;\r\n\r\n  }\r\n  \r\n// componentWillMount(){\r\n//       timer = setInterval( ()=>{\r\n//       let end_time = new Date().getTime();\r\n//       let elapsed_time = Math.floor(((end_time-this.state.start_time)/1000));\r\n//       this.setState({elapsed: elapsed_time})\r\n//     },1000)\r\n// }\r\n\r\n// componentWillUnmount(){\r\n//   clearInterval(timer);\r\n// }\r\n\r\n//update count to next question and add 10 pts if answer is correct\r\nupdateScore(answer){\r\n  \r\n  i = i+1;\r\n\r\n  this.setState({submitted: true})\r\n  console.log(`You have selected ${answer.value}!`);\r\n\r\n  if(answer.isCorrect === true ){\r\n    \r\n      this.setState( (priorState)=>({\r\n        score: priorState.score + 10,\r\n        correct: true\r\n      }))\r\n  }\r\n}\r\n\r\n//called if user selects to play another round; all state variables are reset to the initial state\r\nplayAgain(){\r\n  i=0\r\n  this.setState(this.initialState);\r\n}\r\n\r\n//update state to reflect next question and answer is array.\r\nnextQuestion(){\r\n  \r\n  this.setState({\r\n    question: question[i].description,\r\n    answers: question[i].answers,\r\n    submitted: false,\r\n    correct: false,\r\n  })\r\n}\r\n\r\nclearTimer(timer){\r\n  clearInterval(timer);\r\n}\r\n\r\ncalcScore(){\r\n\r\n  if(this.state.elapsed>60){\r\n\r\n    return Math.max( (this.state.score-5),0);\r\n  \r\n  }else{\r\n    return this.state.score\r\n  }\r\n}\r\n\r\nselectCatagory(catagory){\r\n\r\n  console.log(`You have selected ${catagory}`)\r\n\r\n  //select trivia array of questions based on user selection\r\n  if (catagory === \"Sports\"){\r\n    question = sportsQs;\r\n  }else if(catagory === \"Entertainment\"){\r\n    question = entertainmentQs;\r\n  }else{\r\n    question = scienceQs;\r\n  }\r\n\r\n  //update state to reflect chosen category and define start time\r\n  this.setState({\r\n    iscatagory: true,\r\n    catagory: catagory,\r\n    question: question[i].description,\r\n    answers: question[i].answers,\r\n    start_time: new Date().getTime(),\r\n    testLength: question.length,\r\n\r\n  })\r\n\r\n  //start clock after user selects category\r\n  timer = setInterval( ()=>{\r\n    let end_time = new Date().getTime();\r\n    let elapsed_time = Math.floor(((end_time-this.state.start_time)/1000));\r\n    this.setState({elapsed: elapsed_time})\r\n  },1000)\r\n}\r\n\r\n\r\n  render() {\r\n      let isCorrect;\r\n      let iscatagory = this.state.iscatagory;\r\n      \r\n      if (this.state.correct){\r\n        isCorrect = 'correct'\r\n      }else{\r\n        isCorrect = 'incorrect'\r\n      }\r\n      let button_group;\r\n      \r\n      //the following block executes after the last question is reached for each round\r\n      if(this.state.submitted && i===this.state.testLength){\r\n        //stop timer\r\n        this.clearTimer(timer);\r\n      //define button group to display final score, determine penalty (if any), and offer to play another round\r\n         button_group = \r\n          <div>\r\n            <p>Your answer is: {isCorrect}!</p>\r\n            <p>Your final score is: {this.calcScore()} out of {10*this.state.testLength} points possible!</p>\r\n            <p>{this.state.elapsed>60 ? 'You received a 5 pt penalty for exceeding 60 seconds.':''}</p>\r\n            <button onClick={()=> this.playAgain()}>Play Again</button>\r\n          </div>\r\n      }else if(this.state.submitted && i<this.state.question.length){\r\n        //button group if final question hasn't been reached. Call nextQuestion function\r\n         button_group = \r\n          <div>\r\n             <p>Your answer is: {isCorrect}!</p>\r\n             <button onClick={()=> this.nextQuestion()}>Next Question</button>\r\n          </div>\r\n      }else{\r\n        button_group = \r\n        <div className=\"Answers\">\r\n            <TriviaRound answer={this.state.answers[0]}  onClick={ (answer)=> this.updateScore(answer)}/>\r\n            <TriviaRound answer={this.state.answers[1]}  onClick={ (answer)=> this.updateScore(answer)}/>\r\n            <TriviaRound answer={this.state.answers[2]}  onClick={ (answer)=> this.updateScore(answer)}/>\r\n            <TriviaRound answer={this.state.answers[3]}  onClick={ (answer)=> this.updateScore(answer)}/>\r\n        </div>\r\n\r\n      }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>TriviaRound</h2>\r\n          <div>\r\n          {/* display categories if user has not yet at beginning of the round */}\r\n          { !iscatagory ?\r\n            <React.Fragment>\r\n              <p>Select Trivia Catagory:</p>\r\n              <button onClick={()=> this.selectCatagory(\"Sports\")}>Sports</button>\r\n              <button onClick={()=> this.selectCatagory(\"Entertainment\")}>Entertainment</button>\r\n              <button onClick={()=> this.selectCatagory(\"Science\")}>Science</button>\r\n            </React.Fragment>: null\r\n          }\r\n          </div>\r\n          {/* after user selects category; iscatagory will be set to true and the trivia round will begin */}\r\n          { iscatagory ? \r\n            <React.Fragment>\r\n            <div className=\"Soreboard\">\r\n              <p id=\"score\">Your Score: {this.state.score}</p>\r\n              <p id=\"timer\">Timer: {this.state.elapsed}</p>\r\n            </div>\r\n\r\n            <div className=\"Question\">\r\n              {this.state.question}\r\n            </div>\r\n          \r\n            <h4>Select your answer:</h4>\r\n            <div>{button_group}</div>\r\n          </React.Fragment>: null\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React, { Component } from 'react';\r\nimport './TriviaRound.css';\r\n\r\n\r\n\r\n\r\nclass TriviaRound extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"AnswerDiv\">\r\n            <button onClick={ ()=> this.props.onClick(this.props.answer) }>{this.props.answer.value}</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default TriviaRound;\r\n","// import React, { Component } from 'react';\r\n\r\nconst sportsQs = [\r\n    {\r\n      \"description\": \"Which country is hosted the 2018 FIFA World Cup?\",\r\n      \"answers\": [\r\n        {\r\n          \"value\": \"Russia\",\r\n          \"isCorrect\": true\r\n        },\r\n        {\r\n          \"value\": \"Germany\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Brazil\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Saudi Arabia\",\r\n          \"isCorrect\": false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"In golf, what name is given to a hole score of two under par?\",\r\n      \"answers\": [\r\n        {\r\n          \"value\": \"Bogey\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Birdie\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Eagle\",\r\n          \"isCorrect\": true\r\n        },\r\n        {\r\n          \"value\": \"Albatross\",\r\n          \"isCorrect\": false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"Which English football club has the nickname \\\"The Foxes\\\"?\",\r\n      \"answers\": [\r\n        {\r\n            \"value\": \"Northampton Town\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Leicester City\",\r\n            \"isCorrect\": true\r\n        },\r\n        {\r\n            \"value\": \"Bradford City\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"West Bromwich Albion\",\r\n            \"isCorrect\": false\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"How many points did LeBron James score in his first NBA game?\",\r\n      \"answers\": [\r\n        {\r\n            \"value\": \"19 pts\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"25 pts\",\r\n            \"isCorrect\": true\r\n        },\r\n        {\r\n            \"value\": \"41 pts\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"69 pts\",\r\n            \"isCorrect\": false\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"In what season did the New Orleans Saints win the Super Bowl?\",\r\n      \"answers\": [\r\n        {\r\n            \"value\": \"2011-12\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"2008-09\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"2010-11\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"2009-10\",\r\n            \"isCorrect\": true\r\n        },\r\n      ]\r\n    },\r\n  \r\n  ];\r\n\r\nexport default sportsQs;\r\n","//https://opentdb.com/api.php?amount=20&category=11&difficulty=easy&type=multiple\r\n\r\nconst entertainmentQs = [\r\n    {\r\n      \"description\": \"What was the title of the first Bond movie, released in 1962?\",\r\n      \"answers\": [\r\n        {\r\n          \"value\": \"From Russia with Love\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Dr. No\",\r\n            \"isCorrect\": true\r\n        },\r\n        {\r\n          \"value\": \"Goldfinger\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Thunderball\",\r\n          \"isCorrect\": false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"What is the name of the island that Jurassic Park is built on?\",\r\n      \"answers\": [\r\n        {\r\n          \"value\": \"Isla Sorna\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Isla Muerta\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Isla Nublar\",\r\n          \"isCorrect\": true\r\n        },\r\n        {\r\n          \"value\": \"Isla Pena\",\r\n          \"isCorrect\": false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"Which actor plays Obi-Wan Kenobi in Star Wars Episodes I-lll?\",\r\n      \"answers\": [\r\n        {\r\n            \"value\": \"Alec Guinness\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Ewan McGregor\",\r\n            \"isCorrect\": true\r\n        },\r\n        {\r\n            \"value\": \"Hayden Christensen\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Liam Neeson\",\r\n            \"isCorrect\": false\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"Daniel Radcliffe became a global star in the film industry due to his performance in which film franchise?\",\r\n      \"answers\": [\r\n        {\r\n            \"value\": \"Ted\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Spy Kids\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Harry Potter\",\r\n            \"isCorrect\": true\r\n        },\r\n        {\r\n            \"value\": \"Pirates of the Caribbean\",\r\n            \"isCorrect\": false\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"Who directed \\\"E.T. the Extra-Terrestrial\\\" (1982)?\",\r\n      \"answers\": [\r\n        {\r\n            \"value\": \"Stanley Kubrick\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"James Cameron\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Steven Spielberg\",\r\n            \"isCorrect\": true\r\n        },\r\n        {\r\n            \"value\": \"Tim Burton\",\r\n            \"isCorrect\": false\r\n        },\r\n      ]\r\n    },\r\n  \r\n  ];\r\n\r\nexport default entertainmentQs;\r\n","//https://opentdb.com/api.php?amount=20&category=17&difficulty=easy&type=multiple\r\n\r\nconst scienceQs = [\r\n    {\r\n      \"description\": \"Which Apollo mission was the first one to land on the Moon?\",\r\n      \"answers\": [\r\n        {\r\n          \"value\": \"Apollo 11\",\r\n          \"isCorrect\": true\r\n        },\r\n        {\r\n          \"value\": \"Apollo 10\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Apollo 9\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Apollo 13\",\r\n          \"isCorrect\": false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"What is the largest animal currently on Earth?\",\r\n      \"answers\": [\r\n        {\r\n          \"value\": \"Orca\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Colossal Squid\",\r\n          \"isCorrect\": false\r\n        },\r\n        {\r\n          \"value\": \"Blue Whale\",\r\n          \"isCorrect\": true\r\n        },\r\n        {\r\n          \"value\": \"Giraffe\",\r\n          \"isCorrect\": false\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"Which is the longest bone in the human body?\",\r\n      \"answers\": [\r\n        {\r\n            \"value\": \"Fibula\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Ulna\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Scapula\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Femur\",\r\n            \"isCorrect\": true\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"Which type of rock is created by intense heat AND pressure?\",\r\n      \"answers\": [\r\n        {\r\n            \"value\": \"Metamorphic\",\r\n            \"isCorrect\": true\r\n        },\r\n        {\r\n            \"value\": \"Sedimentary\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Igneous\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Diamond\",\r\n            \"isCorrect\": false\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      \"description\": \"How many planets are in our Solar System?\",\r\n      \"answers\": [\r\n        {\r\n            \"value\": \"Nine\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Seven\",\r\n            \"isCorrect\": false\r\n        },\r\n        {\r\n            \"value\": \"Eight\",\r\n            \"isCorrect\": true\r\n        },\r\n        {\r\n            \"value\": \"Ten\",\r\n            \"isCorrect\": false\r\n        },\r\n      ]\r\n    },\r\n  \r\n  ];\r\n\r\nexport default scienceQs;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}